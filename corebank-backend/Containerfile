# Containerfile for CoreBank Backend
# Multi-stage build for production optimization

# === Build Stage ===
FROM python:3.11-slim as builder

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    build-essential \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Create and activate virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy requirements and install Python dependencies
COPY pyproject.toml /app/
WORKDIR /app
RUN pip install --upgrade pip setuptools wheel

# Install dependencies from pyproject.toml
RUN pip install fastapi[all] uvicorn[standard] \
    pydantic pydantic-settings \
    psycopg[binary] psycopg-pool alembic \
    passlib[bcrypt] python-jose[cryptography] python-multipart \
    python-dotenv loguru

# === Production Stage ===
FROM python:3.11-slim as production

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PATH="/opt/venv/bin:$PATH"

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libpq5 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy virtual environment from builder stage
COPY --from=builder /opt/venv /opt/venv

# Create non-root user for security
RUN groupadd -r corebank && useradd -r -g corebank corebank

# Set working directory
WORKDIR /app

# Copy application code
COPY corebank/ ./corebank/
COPY alembic/ ./alembic/
COPY alembic.ini ./
COPY pyproject.toml README.md ./

# Create necessary directories and set permissions
RUN mkdir -p logs data && \
    chown -R corebank:corebank /app

# Switch to non-root user
USER corebank

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:${API_PORT:-8000}/api/v1/health || exit 1

# Expose port
EXPOSE 8000

# Default command
CMD ["python", "-m", "uvicorn", "corebank.main:app", "--host", "0.0.0.0", "--port", "8000"]

# === Development Stage ===
FROM production as development

# Switch back to root for development setup
USER root

# Install development dependencies
RUN pip install -e ".[dev]"

# Switch back to non-root user
USER corebank

# Override command for development with reload
CMD ["python", "-m", "uvicorn", "corebank.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
